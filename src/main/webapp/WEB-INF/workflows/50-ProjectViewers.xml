<workflow name="ProjectViewers" label="$name$ Viewer" description="$openshift_io/description$" inList="true" orgid="97137c31-a417-4498-907d-e61f8686eb97">
    <dynamicConfiguration dynamic="true" className="com.tremolosecurity.unison.openshiftv3.wf.OpenShiftWorkflows">
        <param name="target" value="openshift"/>
        <param name="kind" value="/api/v1/namespaces"/>
        <param name="filter" value="default" />
        <param name="filter" value="kube-system" />
        <param name="filter" value="myproject" />
        <param name="filter" value="openshift" />
        <param name="filter" value="openshift-infra" />
        <param name="filter" value="unison-service" />
        <param name="filter" value="openunison" />
        <param name="filter" value="kube-public" />
        <param name="filter" value="logging" />
        <param name="filter" value="management-infra" />
    </dynamicConfiguration>
    <tasks>

        
        <customTask className="com.tremolosecurity.provisioning.customTasks.DoesGroupExist">
            <param name="target" value="jitdb"/>
            <param name="groupName" value="approvers-openshift-$name$" />
            <param name="attributeName" value="tremolo.approval.group.exists" />
        </customTask>


        <ifAttrHasValue name="tremolo.approval.group.exists" value="false">
            <onSuccess>
            <customTask className="com.tremolosecurity.provisioning.customTasks.AddGroupToStore">
                <param name="target" value="jitdb"/>
                <param name="name" value="approvers-openshift-$name$"/>
                <param name="attributes" value="unison.group.create.sql=INSERT INTO localGroups (name,description) VALUES (?,?)"/>
                <param name="attributes" value="unison.group.create.param.2=Approve access to $name$" />
            </customTask>

            <customTask className="com.tremolosecurity.provisioning.customTasks.CopyGroupMembers">
                <param name="copyWorkflow" value="addApproverUsers"/>
                <param name="copyTo" value="approvers-openshift-$name$" />
                <param name="copyFrom" value="cn=administrators,ou=groups,ou=shadow,o=Tremolo" />
                <param name="uidAttributeName" value="uid" />
                <param name="requestor" value="system" />
            </customTask>

            </onSuccess>
        </ifAttrHasValue>


        <customTask className="com.tremolosecurity.provisioning.customTasks.LoadAttributes">
            <param name="nameAttr" value="uid"/>
            <param name="name" value="givenname"/>
            <param name="name" value="sn"/>
            <param name="name" value="mail"/>
        </customTask>
        <approval label="Approve Viewer Access to $name$">
            <onSuccess>

                <customTask className="com.tremolosecurity.provisioning.customTasks.AddGroupToStore">
                    <param name="target" value="openshift"/>
                    <param name="name" value="viewer-$name$"/>
                </customTask>

                <customTask className="com.tremolosecurity.provisioning.tasks.CreateK8sObject">
                    <param name="targetName" value="openshift"/>
                    <param name="template" value="{&quot;kind&quot;:&quot;RoleBinding&quot;,&quot;apiVersion&quot;:&quot;rbac.authorization.k8s.io/v1&quot;,&quot;metadata&quot;:{&quot;name&quot;:&quot;view-binding&quot;,&quot;namespace&quot;:&quot;$name$&quot;},&quot;subjects&quot;:[{&quot;kind&quot;:&quot;Group&quot;,&quot;name&quot;:&quot;viewer-$name$&quot;,&quot;apiGroup&quot;:&quot;rbac.authorization.k8s.io&quot;}],&quot;roleRef&quot;:{&quot;kind&quot;:&quot;ClusterRole&quot;,&quot;name&quot;:&quot;view&quot;,&quot;apiGroup&quot;:&quot;rbac.authorization.k8s.io&quot;}}"/>
                    <param name="kind" value="RoleBinding" />
                    <param name="url" value="/apis/rbac.authorization.k8s.io/v1/namespaces/$name$/rolebindings" />
                </customTask>

                <addGroup name="viewer-$name$" remove="false"/>
                <provision sync="false" target="openshift" setPassword="false" onlyPassedInAttributes="false">
                    <attributes/>
                </provision>
                <notifyUser subject="Viewer access to $name$ approved" mailAttrib="mail">
                    <msg>Your access has been approved, please login</msg>
                </notifyUser>
            </onSuccess>
            <onFailure>
                <customTask className="com.tremolosecurity.provisioning.customTasks.LoadGroupsFromTarget">
                    <param name="target" value="openshift"/>
                    <param name="nameAttr" value="uid"/>
                </customTask>
                <addGroup name="viewer-$name$" remove="true"/>
                <provision sync="true" target="openshift" setPassword="false" onlyPassedInAttributes="false">
                    <attributes/>
                </provision>
            </onFailure>
            <emailTemplate>New open request</emailTemplate>
            <approvers>
                <rule scope="group" constraint="cn=approvers-openshift-$name$,ou=groups,ou=shadow,o=Tremolo"/>
            </approvers>
            <mailAttr>mail</mailAttr>
            <failureEmailSubject>Request denied</failureEmailSubject>
            <failureEmailMsg>for reason:&#xD;
&#xD;
${reason}</failureEmailMsg>
            <escalationPolicy>
                <escalationFailure action="leave">
                    <azRules/>
                </escalationFailure>
            </escalationPolicy>
        </approval>
    </tasks>
</workflow>
